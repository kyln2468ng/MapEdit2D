#include "Stage.h"
#include "DxLib.h"

// shift + alt カーソル, ctrl + カーソル
namespace
{
	const int MAP_WIDTH = { 32 };
	const int MAP_HEIGHT = { 22 };
	const int myMap[MAP_HEIGHT][MAP_WIDTH]
		{
			{6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6},
			{6,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,6},
			{6,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,6},
			{6,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,6},
			{6,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,6},
			{6,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,6},
			{6,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,6},
			{6,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,6},
			{6,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,6},
			{6,145,145,145,145,145,145,145,145,145,145,145,145,118,118,118,118,118,145,145,145,145,145,145,145,145,145,145,145,145,145,6},
			{6,145,145,145,145,145,145,145,145,145,145,145,145,118,118,118,118,118,145,145,145,145,145,145,145,145,145,145,145,145,145,6},
			{6,145,145,145,145,145,145,145,145,145,145,145,145,118,103,103,103,118,145,145,145,145,145,145,145,145,145,145,145,145,145,6},
			{6,145,145,145,145,145,145,145,145,145,145,145,145,118,103,103,103,118,145,145,145,145,145,145,145,145,145,145,145,145,145,6},
			{6,145,145,145,145,145,145,145,145,145,145,145,145,145,149,149,149,145,145,145,145,145,145,145,145,145,145,145,145,145,145,6},
			{6,145,145,145,145,145,145,145,145,145,145,145,145,145,149,149,149,145,145,145,145,145,145,145,145,145,145,145,145,145,145,6},
			{6,145,145,145,145,145,145,145,145,145,145,145,145,145,149,149,149,145,145,145,145,145,145,145,145,145,145,145,145,145,145,6},
			{6,145,145,145,145,145,145,145,145,145,145,145,145,145,149,149,149,145,145,145,145,145,145,145,145,145,145,145,145,145,145,6},
			{6,145,145,145,145,145,145,145,145,145,145,145,145,145,149,149,149,145,145,145,145,145,145,145,145,145,145,145,145,145,145,6},
			{6,145,145,145,145,145,145,145,145,145,145,145,145,145,149,149,149,145,145,145,145,145,145,145,145,145,145,145,145,145,145,6},
			{6,145,145,145,145,145,145,145,145,145,145,145,145,145,149,149,149,145,145,145,145,145,145,145,145,145,145,145,145,145,145,6},
			{6,145,145,145,145,145,145,145,145,145,145,145,145,145,149,149,149,145,145,145,145,145,145,145,145,145,145,145,145,145,145,6},
			{6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6}

		};
}

Stage::Stage()
	:GameObject(),hImage(-1),imageSize(32),imageElement(16)
{
	/*GameObject();
	hImage = -1;
	imageSize = 32;
	imageElement = 16;*/
	hImage = LoadGraph("./bg.png");
}

Stage::~Stage()
{
	if (hImage != -1)
	{
		DeleteGraph(hImage);
		hImage = -1;
	}
}

void Stage::Update()
{
}

void Stage::Draw()
{
	if (hImage != -1)
	{
		for (int j = 0; j < MAP_HEIGHT; j++)
		{
			for (int i = 0; i < MAP_WIDTH; i++)
			{
				int kx = myMap[j][i] % imageElement;
				int ky = myMap[i][j] / imageElement;
				/*int ky = myMap[i][j] / 16;
				int kx = myMap[j][i] - ky;*/
				DrawRectGraph(i * imageSize, j * imageSize, imageSize * kx, imageSize * ky, imageSize, imageSize, hImage, TRUE);
			}
		}
	}
	
}
